Elm.Bricks = Elm.Bricks || {};
Elm.Bricks.make = function (_elm) {
   "use strict";
   _elm.Bricks = _elm.Bricks || {};
   if (_elm.Bricks.values) return _elm.Bricks.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Constants = Elm.Constants.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Object = Elm.Object.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var displayBrick = function (brick) {    return A3($Object.displayObj,brick,A2($Graphics$Collage.rect,65,10),brick.color);};
   var displayBricks = F2(function (bricks,shapes) {
      var brickColors = A2($List.map,function (_) {    return _.color;},bricks);
      return A2($List.map,displayBrick,bricks);
   });
   var numberOfBricks = $Basics.floor($Basics.toFloat($Constants.gameWidth) / 60.0 - 2);
   var makeBrick = function (x) {    return {x: x,y: $Constants.halfHeight - 7,vy: 0,vx: 0,color: $Color.green};};
   var initBrick = makeBrick(35 - $Constants.halfWidth);
   var newBricks = A2($List._op["::"],initBrick,_U.list([]));
   var createSubsequentBricks = F3(function (numberOfBricksLeft,brick,bricks) {
      createSubsequentBricks: while (true) {
         var num = numberOfBricksLeft - 1;
         var nextBrick = makeBrick(brick.x + 66);
         var newBricks = A2($List._op["::"],nextBrick,bricks);
         if (_U.eq(numberOfBricksLeft,0)) return bricks; else {
               var _v0 = num,_v1 = nextBrick,_v2 = newBricks;
               numberOfBricksLeft = _v0;
               brick = _v1;
               bricks = _v2;
               continue createSubsequentBricks;
            }
      }
   });
   var createBricks = A3(createSubsequentBricks,numberOfBricks,initBrick,newBricks);
   return _elm.Bricks.values = {_op: _op
                               ,makeBrick: makeBrick
                               ,initBrick: initBrick
                               ,newBricks: newBricks
                               ,numberOfBricks: numberOfBricks
                               ,createBricks: createBricks
                               ,createSubsequentBricks: createSubsequentBricks
                               ,displayBrick: displayBrick
                               ,displayBricks: displayBricks};
};